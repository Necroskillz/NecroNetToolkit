//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_ATCs", "ATCs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.ATC), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Comments_Prices", "Prices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.Price), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Comment), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Companies_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.Country), "Organizations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Organization), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.DDDMeasureUnit), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_Deliveries", "Deliveries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Delivery), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Forms_Deliveries", "Deliveries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Delivery), "Forms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Form), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_Companies", "Organizations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Organization), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_Companies1", "Organizations", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Organization), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_Forms", "Forms", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Form), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_IndicationGroups", "IndicationGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.IndicationGroup), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Drugs_Wrappings", "Wrappings", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Wrapping), "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Drug), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Prices_Drugs", "Drugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.Drug), "Prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Price), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Pharmacies_PostalCodes", "PostalCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.PostalCode), "Pharmacies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Pharmacy), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Prices_Pharmacies", "Pharmacies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.Pharmacy), "Prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Price), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Users_Pharmacies", "Pharmacies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.Pharmacy), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.User), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK__Posts__UserId__412EB0B6", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.User), "Posts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Post), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_Prices_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NecroNetToolkit.Web.Test.User), "Prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Price), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "FK_SignUpRequests_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NecroNetToolkit.Web.Test.User), "SignUpRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.SignUpRequest), true)]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "PlacesInPostalCodes", "Places", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Place), "PostalCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.PostalCode))]
[assembly: EdmRelationshipAttribute("DoplatkyModel", "UsersInRoles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NecroNetToolkit.Web.Test.User))]

#endregion

namespace NecroNetToolkit.Web.Test
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DoplatkyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DoplatkyEntities object using the connection string found in the 'DoplatkyEntities' section of the application configuration file.
        /// </summary>
        public DoplatkyEntities() : base("name=DoplatkyEntities", "DoplatkyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DoplatkyEntities object.
        /// </summary>
        public DoplatkyEntities(string connectionString) : base(connectionString, "DoplatkyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DoplatkyEntities object.
        /// </summary>
        public DoplatkyEntities(EntityConnection connection) : base(connection, "DoplatkyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ATC> ATCs
        {
            get
            {
                if ((_ATCs == null))
                {
                    _ATCs = base.CreateObjectSet<ATC>("ATCs");
                }
                return _ATCs;
            }
        }
        private ObjectSet<ATC> _ATCs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DDDMeasureUnit> DDDMeasureUnits
        {
            get
            {
                if ((_DDDMeasureUnits == null))
                {
                    _DDDMeasureUnits = base.CreateObjectSet<DDDMeasureUnit>("DDDMeasureUnits");
                }
                return _DDDMeasureUnits;
            }
        }
        private ObjectSet<DDDMeasureUnit> _DDDMeasureUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Delivery> Deliveries
        {
            get
            {
                if ((_Deliveries == null))
                {
                    _Deliveries = base.CreateObjectSet<Delivery>("Deliveries");
                }
                return _Deliveries;
            }
        }
        private ObjectSet<Delivery> _Deliveries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Drug> Drugs
        {
            get
            {
                if ((_Drugs == null))
                {
                    _Drugs = base.CreateObjectSet<Drug>("Drugs");
                }
                return _Drugs;
            }
        }
        private ObjectSet<Drug> _Drugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Form> Forms
        {
            get
            {
                if ((_Forms == null))
                {
                    _Forms = base.CreateObjectSet<Form>("Forms");
                }
                return _Forms;
            }
        }
        private ObjectSet<Form> _Forms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IndicationGroup> IndicationGroups
        {
            get
            {
                if ((_IndicationGroups == null))
                {
                    _IndicationGroups = base.CreateObjectSet<IndicationGroup>("IndicationGroups");
                }
                return _IndicationGroups;
            }
        }
        private ObjectSet<IndicationGroup> _IndicationGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pharmacy> Pharmacies
        {
            get
            {
                if ((_Pharmacies == null))
                {
                    _Pharmacies = base.CreateObjectSet<Pharmacy>("Pharmacies");
                }
                return _Pharmacies;
            }
        }
        private ObjectSet<Pharmacy> _Pharmacies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Place> Places
        {
            get
            {
                if ((_Places == null))
                {
                    _Places = base.CreateObjectSet<Place>("Places");
                }
                return _Places;
            }
        }
        private ObjectSet<Place> _Places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PopularSearch> PopularSearches
        {
            get
            {
                if ((_PopularSearches == null))
                {
                    _PopularSearches = base.CreateObjectSet<PopularSearch>("PopularSearches");
                }
                return _PopularSearches;
            }
        }
        private ObjectSet<PopularSearch> _PopularSearches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostalCode> PostalCodes
        {
            get
            {
                if ((_PostalCodes == null))
                {
                    _PostalCodes = base.CreateObjectSet<PostalCode>("PostalCodes");
                }
                return _PostalCodes;
            }
        }
        private ObjectSet<PostalCode> _PostalCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Post>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Post> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Search> Searches
        {
            get
            {
                if ((_Searches == null))
                {
                    _Searches = base.CreateObjectSet<Search>("Searches");
                }
                return _Searches;
            }
        }
        private ObjectSet<Search> _Searches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SignUpRequest> SignUpRequests
        {
            get
            {
                if ((_SignUpRequests == null))
                {
                    _SignUpRequests = base.CreateObjectSet<SignUpRequest>("SignUpRequests");
                }
                return _SignUpRequests;
            }
        }
        private ObjectSet<SignUpRequest> _SignUpRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wrapping> Wrappings
        {
            get
            {
                if ((_Wrappings == null))
                {
                    _Wrappings = base.CreateObjectSet<Wrapping>("Wrappings");
                }
                return _Wrappings;
            }
        }
        private ObjectSet<Wrapping> _Wrappings;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ATCs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToATCs(ATC aTC)
        {
            base.AddObject("ATCs", aTC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DDDMeasureUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDDDMeasureUnits(DDDMeasureUnit dDDMeasureUnit)
        {
            base.AddObject("DDDMeasureUnits", dDDMeasureUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deliveries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeliveries(Delivery delivery)
        {
            base.AddObject("Deliveries", delivery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugs(Drug drug)
        {
            base.AddObject("Drugs", drug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForms(Form form)
        {
            base.AddObject("Forms", form);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IndicationGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndicationGroups(IndicationGroup indicationGroup)
        {
            base.AddObject("IndicationGroups", indicationGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pharmacies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPharmacies(Pharmacy pharmacy)
        {
            base.AddObject("Pharmacies", pharmacy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaces(Place place)
        {
            base.AddObject("Places", place);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PopularSearches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPopularSearches(PopularSearch popularSearch)
        {
            base.AddObject("PopularSearches", popularSearch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostalCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostalCodes(PostalCode postalCode)
        {
            base.AddObject("PostalCodes", postalCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Post post)
        {
            base.AddObject("Posts", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Searches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearches(Search search)
        {
            base.AddObject("Searches", search);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SignUpRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSignUpRequests(SignUpRequest signUpRequest)
        {
            base.AddObject("SignUpRequests", signUpRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wrappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWrappings(Wrapping wrapping)
        {
            base.AddObject("Wrappings", wrapping);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="ATC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ATC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ATC object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ATC CreateATC(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            ATC aTC = new ATC();
            aTC.Id = id;
            aTC.Code = code;
            aTC.Name = name;
            return aTC;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_ATCs", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_ATCs", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_ATCs", "Drugs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="priceId">Initial value of the PriceId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.Int32 priceId, global::System.String title, global::System.String content, global::System.DateTime date)
        {
            Comment comment = new Comment();
            comment.Id = id;
            comment.PriceId = priceId;
            comment.Title = title;
            comment.Content = content;
            comment.Date = date;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriceId
        {
            get
            {
                return _PriceId;
            }
            set
            {
                OnPriceIdChanging(value);
                ReportPropertyChanging("PriceId");
                _PriceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceId");
                OnPriceIdChanged();
            }
        }
        private global::System.Int32 _PriceId;
        partial void OnPriceIdChanging(global::System.Int32 value);
        partial void OnPriceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Comments_Prices", "Prices")]
        public Price Price
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("DoplatkyModel.FK_Comments_Prices", "Prices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("DoplatkyModel.FK_Comments_Prices", "Prices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Price> PriceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Price>("DoplatkyModel.FK_Comments_Prices", "Prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Price>("DoplatkyModel.FK_Comments_Prices", "Prices", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            country.Code = code;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Companies_Countries", "Organizations")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("DoplatkyModel.FK_Companies_Countries", "Organizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("DoplatkyModel.FK_Companies_Countries", "Organizations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="DDDMeasureUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DDDMeasureUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DDDMeasureUnit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static DDDMeasureUnit CreateDDDMeasureUnit(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            DDDMeasureUnit dDDMeasureUnit = new DDDMeasureUnit();
            dDDMeasureUnit.Id = id;
            dDDMeasureUnit.Name = name;
            dDDMeasureUnit.Code = code;
            return dDDMeasureUnit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_DDDMeasureUnits", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "Drugs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Delivery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Delivery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Delivery object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Delivery CreateDelivery(global::System.Int32 id, global::System.String code, global::System.String name)
        {
            Delivery delivery = new Delivery();
            delivery.Id = id;
            delivery.Code = code;
            delivery.Name = name;
            return delivery;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Deliveries", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Deliveries", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Deliveries", "Drugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Forms_Deliveries", "Forms")]
        public EntityCollection<Form> Forms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Form>("DoplatkyModel.FK_Forms_Deliveries", "Forms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Form>("DoplatkyModel.FK_Forms_Deliveries", "Forms", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Drug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Drug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Drug object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="nameSupplement">Initial value of the NameSupplement property.</param>
        /// <param name="registration">Initial value of the Registration property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="isAnnoucedBeforeMarketed">Initial value of the IsAnnoucedBeforeMarketed property.</param>
        public static Drug CreateDrug(global::System.Int32 id, global::System.String name, global::System.String nameSupplement, global::System.String registration, global::System.String code, global::System.Boolean isAnnoucedBeforeMarketed)
        {
            Drug drug = new Drug();
            drug.Id = id;
            drug.Name = name;
            drug.NameSupplement = nameSupplement;
            drug.Registration = registration;
            drug.Code = code;
            drug.IsAnnoucedBeforeMarketed = isAnnoucedBeforeMarketed;
            return drug;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryId
        {
            get
            {
                return _DeliveryId;
            }
            set
            {
                OnDeliveryIdChanging(value);
                ReportPropertyChanging("DeliveryId");
                _DeliveryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryId");
                OnDeliveryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryId;
        partial void OnDeliveryIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndicationGroupId
        {
            get
            {
                return _IndicationGroupId;
            }
            set
            {
                OnIndicationGroupIdChanging(value);
                ReportPropertyChanging("IndicationGroupId");
                _IndicationGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndicationGroupId");
                OnIndicationGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IndicationGroupId;
        partial void OnIndicationGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnIndicationGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DDDMeasureUnitId
        {
            get
            {
                return _DDDMeasureUnitId;
            }
            set
            {
                OnDDDMeasureUnitIdChanging(value);
                ReportPropertyChanging("DDDMeasureUnitId");
                _DDDMeasureUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DDDMeasureUnitId");
                OnDDDMeasureUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DDDMeasureUnitId;
        partial void OnDDDMeasureUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnDDDMeasureUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormId
        {
            get
            {
                return _FormId;
            }
            set
            {
                OnFormIdChanging(value);
                ReportPropertyChanging("FormId");
                _FormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormId");
                OnFormIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FormId;
        partial void OnFormIdChanging(Nullable<global::System.Int32> value);
        partial void OnFormIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ATCId
        {
            get
            {
                return _ATCId;
            }
            set
            {
                OnATCIdChanging(value);
                ReportPropertyChanging("ATCId");
                _ATCId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ATCId");
                OnATCIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ATCId;
        partial void OnATCIdChanging(Nullable<global::System.Int32> value);
        partial void OnATCIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WrappingId
        {
            get
            {
                return _WrappingId;
            }
            set
            {
                OnWrappingIdChanging(value);
                ReportPropertyChanging("WrappingId");
                _WrappingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WrappingId");
                OnWrappingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WrappingId;
        partial void OnWrappingIdChanging(Nullable<global::System.Int32> value);
        partial void OnWrappingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerId
        {
            get
            {
                return _ManufacturerId;
            }
            set
            {
                OnManufacturerIdChanging(value);
                ReportPropertyChanging("ManufacturerId");
                _ManufacturerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerId");
                OnManufacturerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerId;
        partial void OnManufacturerIdChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistrationHolderId
        {
            get
            {
                return _RegistrationHolderId;
            }
            set
            {
                OnRegistrationHolderIdChanging(value);
                ReportPropertyChanging("RegistrationHolderId");
                _RegistrationHolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationHolderId");
                OnRegistrationHolderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistrationHolderId;
        partial void OnRegistrationHolderIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegistrationHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameSupplement
        {
            get
            {
                return _NameSupplement;
            }
            set
            {
                OnNameSupplementChanging(value);
                ReportPropertyChanging("NameSupplement");
                _NameSupplement = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameSupplement");
                OnNameSupplementChanged();
            }
        }
        private global::System.String _NameSupplement;
        partial void OnNameSupplementChanging(global::System.String value);
        partial void OnNameSupplementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageSize
        {
            get
            {
                return _PackageSize;
            }
            set
            {
                OnPackageSizeChanging(value);
                ReportPropertyChanging("PackageSize");
                _PackageSize = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageSize");
                OnPackageSizeChanged();
            }
        }
        private global::System.String _PackageSize;
        partial void OnPackageSizeChanging(global::System.String value);
        partial void OnPackageSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Strength
        {
            get
            {
                return _Strength;
            }
            set
            {
                OnStrengthChanging(value);
                ReportPropertyChanging("Strength");
                _Strength = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Strength");
                OnStrengthChanged();
            }
        }
        private global::System.String _Strength;
        partial void OnStrengthChanging(global::System.String value);
        partial void OnStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Registration
        {
            get
            {
                return _Registration;
            }
            set
            {
                OnRegistrationChanging(value);
                ReportPropertyChanging("Registration");
                _Registration = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Registration");
                OnRegistrationChanged();
            }
        }
        private global::System.String _Registration;
        partial void OnRegistrationChanging(global::System.String value);
        partial void OnRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DDDAmount
        {
            get
            {
                return _DDDAmount;
            }
            set
            {
                OnDDDAmountChanging(value);
                ReportPropertyChanging("DDDAmount");
                _DDDAmount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DDDAmount");
                OnDDDAmountChanged();
            }
        }
        private global::System.String _DDDAmount;
        partial void OnDDDAmountChanging(global::System.String value);
        partial void OnDDDAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DDDCount
        {
            get
            {
                return _DDDCount;
            }
            set
            {
                OnDDDCountChanging(value);
                ReportPropertyChanging("DDDCount");
                _DDDCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DDDCount");
                OnDDDCountChanged();
            }
        }
        private Nullable<global::System.Decimal> _DDDCount;
        partial void OnDDDCountChanging(Nullable<global::System.Decimal> value);
        partial void OnDDDCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Retail
        {
            get
            {
                return _Retail;
            }
            set
            {
                OnRetailChanging(value);
                ReportPropertyChanging("Retail");
                _Retail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Retail");
                OnRetailChanged();
            }
        }
        private global::System.String _Retail;
        partial void OnRetailChanging(global::System.String value);
        partial void OnRetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addiction
        {
            get
            {
                return _Addiction;
            }
            set
            {
                OnAddictionChanging(value);
                ReportPropertyChanging("Addiction");
                _Addiction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Addiction");
                OnAddictionChanged();
            }
        }
        private global::System.String _Addiction;
        partial void OnAddictionChanging(global::System.String value);
        partial void OnAddictionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationChangeInfo
        {
            get
            {
                return _RegistrationChangeInfo;
            }
            set
            {
                OnRegistrationChangeInfoChanging(value);
                ReportPropertyChanging("RegistrationChangeInfo");
                _RegistrationChangeInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationChangeInfo");
                OnRegistrationChangeInfoChanged();
            }
        }
        private global::System.String _RegistrationChangeInfo;
        partial void OnRegistrationChangeInfoChanging(global::System.String value);
        partial void OnRegistrationChangeInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnnoucedBeforeMarketed
        {
            get
            {
                return _IsAnnoucedBeforeMarketed;
            }
            set
            {
                OnIsAnnoucedBeforeMarketedChanging(value);
                ReportPropertyChanging("IsAnnoucedBeforeMarketed");
                _IsAnnoucedBeforeMarketed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnnoucedBeforeMarketed");
                OnIsAnnoucedBeforeMarketedChanged();
            }
        }
        private global::System.Boolean _IsAnnoucedBeforeMarketed;
        partial void OnIsAnnoucedBeforeMarketedChanging(global::System.Boolean value);
        partial void OnIsAnnoucedBeforeMarketedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RegistrationExpiry
        {
            get
            {
                return _RegistrationExpiry;
            }
            set
            {
                OnRegistrationExpiryChanging(value);
                ReportPropertyChanging("RegistrationExpiry");
                _RegistrationExpiry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationExpiry");
                OnRegistrationExpiryChanged();
            }
        }
        private Nullable<global::System.DateTime> _RegistrationExpiry;
        partial void OnRegistrationExpiryChanging(Nullable<global::System.DateTime> value);
        partial void OnRegistrationExpiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationNumber
        {
            get
            {
                return _RegistrationNumber;
            }
            set
            {
                OnRegistrationNumberChanging(value);
                ReportPropertyChanging("RegistrationNumber");
                _RegistrationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationNumber");
                OnRegistrationNumberChanged();
            }
        }
        private global::System.String _RegistrationNumber;
        partial void OnRegistrationNumberChanging(global::System.String value);
        partial void OnRegistrationNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_ATCs", "ATCs")]
        public ATC ATC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATC>("DoplatkyModel.FK_Drugs_ATCs", "ATCs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATC>("DoplatkyModel.FK_Drugs_ATCs", "ATCs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ATC> ATCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ATC>("DoplatkyModel.FK_Drugs_ATCs", "ATCs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ATC>("DoplatkyModel.FK_Drugs_ATCs", "ATCs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits")]
        public DDDMeasureUnit DDDMeasureUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DDDMeasureUnit>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DDDMeasureUnit>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DDDMeasureUnit> DDDMeasureUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DDDMeasureUnit>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DDDMeasureUnit>("DoplatkyModel.FK_Drugs_DDDMeasureUnits", "DDDMeasureUnits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Deliveries", "Deliveries")]
        public Delivery Delivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Drugs_Deliveries", "Deliveries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Drugs_Deliveries", "Deliveries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Delivery> DeliveryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Drugs_Deliveries", "Deliveries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Delivery>("DoplatkyModel.FK_Drugs_Deliveries", "Deliveries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Companies", "Organizations")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies", "Organizations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies", "Organizations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies", "Organizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies", "Organizations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Companies1", "Organizations")]
        public Organization Organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies1", "Organizations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies1", "Organizations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> Organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies1", "Organizations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("DoplatkyModel.FK_Drugs_Companies1", "Organizations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Forms", "Forms")]
        public Form Form
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DoplatkyModel.FK_Drugs_Forms", "Forms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DoplatkyModel.FK_Drugs_Forms", "Forms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Form> FormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Form>("DoplatkyModel.FK_Drugs_Forms", "Forms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Form>("DoplatkyModel.FK_Drugs_Forms", "Forms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_IndicationGroups", "IndicationGroups")]
        public IndicationGroup IndicationGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IndicationGroup>("DoplatkyModel.FK_Drugs_IndicationGroups", "IndicationGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IndicationGroup>("DoplatkyModel.FK_Drugs_IndicationGroups", "IndicationGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IndicationGroup> IndicationGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IndicationGroup>("DoplatkyModel.FK_Drugs_IndicationGroups", "IndicationGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IndicationGroup>("DoplatkyModel.FK_Drugs_IndicationGroups", "IndicationGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Wrappings", "Wrappings")]
        public Wrapping Wrapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wrapping>("DoplatkyModel.FK_Drugs_Wrappings", "Wrappings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wrapping>("DoplatkyModel.FK_Drugs_Wrappings", "Wrappings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wrapping> WrappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wrapping>("DoplatkyModel.FK_Drugs_Wrappings", "Wrappings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wrapping>("DoplatkyModel.FK_Drugs_Wrappings", "Wrappings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Drugs", "Prices")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("DoplatkyModel.FK_Prices_Drugs", "Prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("DoplatkyModel.FK_Prices_Drugs", "Prices", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Form")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Form : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Form object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Form CreateForm(global::System.Int32 id, global::System.String name)
        {
            Form form = new Form();
            form.Id = id;
            form.Name = name;
            return form;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryId
        {
            get
            {
                return _DeliveryId;
            }
            set
            {
                OnDeliveryIdChanging(value);
                ReportPropertyChanging("DeliveryId");
                _DeliveryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryId");
                OnDeliveryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryId;
        partial void OnDeliveryIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Forms_Deliveries", "Deliveries")]
        public Delivery Delivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Forms_Deliveries", "Deliveries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Forms_Deliveries", "Deliveries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Delivery> DeliveryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Delivery>("DoplatkyModel.FK_Forms_Deliveries", "Deliveries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Delivery>("DoplatkyModel.FK_Forms_Deliveries", "Deliveries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Forms", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Forms", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Forms", "Drugs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="IndicationGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IndicationGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IndicationGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static IndicationGroup CreateIndicationGroup(global::System.Int32 id, global::System.String code)
        {
            IndicationGroup indicationGroup = new IndicationGroup();
            indicationGroup.Id = id;
            indicationGroup.Code = code;
            return indicationGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_IndicationGroups", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_IndicationGroups", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_IndicationGroups", "Drugs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Organization CreateOrganization(global::System.Int32 id, global::System.Int32 countryId, global::System.String code, global::System.String name)
        {
            Organization organization = new Organization();
            organization.Id = id;
            organization.CountryId = countryId;
            organization.Code = code;
            organization.Name = name;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Companies_Countries", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DoplatkyModel.FK_Companies_Countries", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DoplatkyModel.FK_Companies_Countries", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DoplatkyModel.FK_Companies_Countries", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DoplatkyModel.FK_Companies_Countries", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Companies", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Companies", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Companies", "Drugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Companies1", "Drugs")]
        public EntityCollection<Drug> Drugs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Companies1", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Companies1", "Drugs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Pharmacy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pharmacy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pharmacy object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="postalCodeId">Initial value of the PostalCodeId property.</param>
        /// <param name="edited">Initial value of the Edited property.</param>
        public static Pharmacy CreatePharmacy(global::System.Int32 id, global::System.String name, global::System.String city, global::System.Int32 postalCodeId, global::System.Boolean edited)
        {
            Pharmacy pharmacy = new Pharmacy();
            pharmacy.Id = id;
            pharmacy.Name = name;
            pharmacy.City = city;
            pharmacy.PostalCodeId = postalCodeId;
            pharmacy.Edited = edited;
            return pharmacy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostalCodeId
        {
            get
            {
                return _PostalCodeId;
            }
            set
            {
                OnPostalCodeIdChanging(value);
                ReportPropertyChanging("PostalCodeId");
                _PostalCodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostalCodeId");
                OnPostalCodeIdChanged();
            }
        }
        private global::System.Int32 _PostalCodeId;
        partial void OnPostalCodeIdChanging(global::System.Int32 value);
        partial void OnPostalCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Edited
        {
            get
            {
                return _Edited;
            }
            set
            {
                OnEditedChanging(value);
                ReportPropertyChanging("Edited");
                _Edited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Edited");
                OnEditedChanged();
            }
        }
        private global::System.Boolean _Edited;
        partial void OnEditedChanging(global::System.Boolean value);
        partial void OnEditedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CIN
        {
            get
            {
                return _CIN;
            }
            set
            {
                OnCINChanging(value);
                ReportPropertyChanging("CIN");
                _CIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CIN");
                OnCINChanged();
            }
        }
        private global::System.String _CIN;
        partial void OnCINChanging(global::System.String value);
        partial void OnCINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TIN
        {
            get
            {
                return _TIN;
            }
            set
            {
                OnTINChanging(value);
                ReportPropertyChanging("TIN");
                _TIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TIN");
                OnTINChanged();
            }
        }
        private global::System.String _TIN;
        partial void OnTINChanging(global::System.String value);
        partial void OnTINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpenHours
        {
            get
            {
                return _OpenHours;
            }
            set
            {
                OnOpenHoursChanging(value);
                ReportPropertyChanging("OpenHours");
                _OpenHours = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpenHours");
                OnOpenHoursChanged();
            }
        }
        private global::System.String _OpenHours;
        partial void OnOpenHoursChanging(global::System.String value);
        partial void OnOpenHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Keywords
        {
            get
            {
                return _Keywords;
            }
            set
            {
                OnKeywordsChanging(value);
                ReportPropertyChanging("Keywords");
                _Keywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Keywords");
                OnKeywordsChanged();
            }
        }
        private global::System.String _Keywords;
        partial void OnKeywordsChanging(global::System.String value);
        partial void OnKeywordsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Pharmacies_PostalCodes", "PostalCodes")]
        public PostalCode PostalCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalCode>("DoplatkyModel.FK_Pharmacies_PostalCodes", "PostalCodes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalCode>("DoplatkyModel.FK_Pharmacies_PostalCodes", "PostalCodes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PostalCode> PostalCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PostalCode>("DoplatkyModel.FK_Pharmacies_PostalCodes", "PostalCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PostalCode>("DoplatkyModel.FK_Pharmacies_PostalCodes", "PostalCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Pharmacies", "Prices")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("DoplatkyModel.FK_Prices_Pharmacies", "Prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("DoplatkyModel.FK_Prices_Pharmacies", "Prices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Users_Pharmacies", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DoplatkyModel.FK_Users_Pharmacies", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DoplatkyModel.FK_Users_Pharmacies", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Place")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Place : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Place object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lookupName">Initial value of the LookupName property.</param>
        public static Place CreatePlace(global::System.Int32 id, global::System.String name, global::System.String lookupName)
        {
            Place place = new Place();
            place.Id = id;
            place.Name = name;
            place.LookupName = lookupName;
            return place;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LookupName
        {
            get
            {
                return _LookupName;
            }
            set
            {
                OnLookupNameChanging(value);
                ReportPropertyChanging("LookupName");
                _LookupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LookupName");
                OnLookupNameChanged();
            }
        }
        private global::System.String _LookupName;
        partial void OnLookupNameChanging(global::System.String value);
        partial void OnLookupNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "PlacesInPostalCodes", "PostalCodes")]
        public EntityCollection<PostalCode> PostalCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostalCode>("DoplatkyModel.PlacesInPostalCodes", "PostalCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostalCode>("DoplatkyModel.PlacesInPostalCodes", "PostalCodes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="PopularSearch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PopularSearch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PopularSearch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="keyword">Initial value of the Keyword property.</param>
        /// <param name="hits">Initial value of the Hits property.</param>
        public static PopularSearch CreatePopularSearch(global::System.Int32 id, global::System.String keyword, global::System.Int32 hits)
        {
            PopularSearch popularSearch = new PopularSearch();
            popularSearch.Id = id;
            popularSearch.Keyword = keyword;
            popularSearch.Hits = hits;
            return popularSearch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hits
        {
            get
            {
                return _Hits;
            }
            set
            {
                OnHitsChanging(value);
                ReportPropertyChanging("Hits");
                _Hits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hits");
                OnHitsChanged();
            }
        }
        private global::System.Int32 _Hits;
        partial void OnHitsChanging(global::System.Int32 value);
        partial void OnHitsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Post CreatePost(global::System.Int32 id, global::System.String title, global::System.String content, global::System.DateTime dateCreated, global::System.Int32 userId)
        {
            Post post = new Post();
            post.Id = id;
            post.Title = title;
            post.Content = content;
            post.DateCreated = dateCreated;
            post.UserId = userId;
            return post;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK__Posts__UserId__412EB0B6", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="PostalCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostalCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostalCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static PostalCode CreatePostalCode(global::System.Int32 id, global::System.String code)
        {
            PostalCode postalCode = new PostalCode();
            postalCode.Id = id;
            postalCode.Code = code;
            return postalCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Pharmacies_PostalCodes", "Pharmacies")]
        public EntityCollection<Pharmacy> Pharmacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pharmacy>("DoplatkyModel.FK_Pharmacies_PostalCodes", "Pharmacies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pharmacy>("DoplatkyModel.FK_Pharmacies_PostalCodes", "Pharmacies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "PlacesInPostalCodes", "Places")]
        public EntityCollection<Place> Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Place>("DoplatkyModel.PlacesInPostalCodes", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Place>("DoplatkyModel.PlacesInPostalCodes", "Places", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="drugId">Initial value of the DrugId property.</param>
        /// <param name="pharmacyId">Initial value of the PharmacyId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Price CreatePrice(global::System.Int32 id, global::System.Int32 drugId, global::System.Int32 pharmacyId, global::System.DateTime date, global::System.Decimal amount)
        {
            Price price = new Price();
            price.Id = id;
            price.DrugId = drugId;
            price.PharmacyId = pharmacyId;
            price.Date = date;
            price.Amount = amount;
            return price;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DrugId
        {
            get
            {
                return _DrugId;
            }
            set
            {
                OnDrugIdChanging(value);
                ReportPropertyChanging("DrugId");
                _DrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugId");
                OnDrugIdChanged();
            }
        }
        private global::System.Int32 _DrugId;
        partial void OnDrugIdChanging(global::System.Int32 value);
        partial void OnDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PharmacyId
        {
            get
            {
                return _PharmacyId;
            }
            set
            {
                OnPharmacyIdChanging(value);
                ReportPropertyChanging("PharmacyId");
                _PharmacyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PharmacyId");
                OnPharmacyIdChanged();
            }
        }
        private global::System.Int32 _PharmacyId;
        partial void OnPharmacyIdChanging(global::System.Int32 value);
        partial void OnPharmacyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Comments_Prices", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("DoplatkyModel.FK_Comments_Prices", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("DoplatkyModel.FK_Comments_Prices", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Drugs", "Drugs")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("DoplatkyModel.FK_Prices_Drugs", "Drugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("DoplatkyModel.FK_Prices_Drugs", "Drugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("DoplatkyModel.FK_Prices_Drugs", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("DoplatkyModel.FK_Prices_Drugs", "Drugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Pharmacies", "Pharmacies")]
        public Pharmacy Pharmacy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Prices_Pharmacies", "Pharmacies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Prices_Pharmacies", "Pharmacies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pharmacy> PharmacyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Prices_Pharmacies", "Pharmacies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pharmacy>("DoplatkyModel.FK_Prices_Pharmacies", "Pharmacies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_Prices_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_Prices_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_Prices_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DoplatkyModel.FK_Prices_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "UsersInRoles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("DoplatkyModel.UsersInRoles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("DoplatkyModel.UsersInRoles", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Search")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Search : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Search object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="keyword">Initial value of the Keyword property.</param>
        /// <param name="hostIP">Initial value of the HostIP property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static Search CreateSearch(global::System.Int32 id, global::System.String keyword, global::System.String hostIP, global::System.DateTime time)
        {
            Search search = new Search();
            search.Id = id;
            search.Keyword = keyword;
            search.HostIP = hostIP;
            search.Time = time;
            return search;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HostIP
        {
            get
            {
                return _HostIP;
            }
            set
            {
                OnHostIPChanging(value);
                ReportPropertyChanging("HostIP");
                _HostIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HostIP");
                OnHostIPChanged();
            }
        }
        private global::System.String _HostIP;
        partial void OnHostIPChanging(global::System.String value);
        partial void OnHostIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="SignUpRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SignUpRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SignUpRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="cIN">Initial value of the CIN property.</param>
        /// <param name="tIN">Initial value of the TIN property.</param>
        public static SignUpRequest CreateSignUpRequest(global::System.Int32 id, global::System.Int32 userId, global::System.String cIN, global::System.String tIN)
        {
            SignUpRequest signUpRequest = new SignUpRequest();
            signUpRequest.Id = id;
            signUpRequest.UserId = userId;
            signUpRequest.CIN = cIN;
            signUpRequest.TIN = tIN;
            return signUpRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpenHours
        {
            get
            {
                return _OpenHours;
            }
            set
            {
                OnOpenHoursChanging(value);
                ReportPropertyChanging("OpenHours");
                _OpenHours = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpenHours");
                OnOpenHoursChanged();
            }
        }
        private global::System.String _OpenHours;
        partial void OnOpenHoursChanging(global::System.String value);
        partial void OnOpenHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CIN
        {
            get
            {
                return _CIN;
            }
            set
            {
                OnCINChanging(value);
                ReportPropertyChanging("CIN");
                _CIN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CIN");
                OnCINChanged();
            }
        }
        private global::System.String _CIN;
        partial void OnCINChanging(global::System.String value);
        partial void OnCINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TIN
        {
            get
            {
                return _TIN;
            }
            set
            {
                OnTINChanging(value);
                ReportPropertyChanging("TIN");
                _TIN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TIN");
                OnTINChanged();
            }
        }
        private global::System.String _TIN;
        partial void OnTINChanging(global::System.String value);
        partial void OnTINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyName
        {
            get
            {
                return _PharmacyName;
            }
            set
            {
                OnPharmacyNameChanging(value);
                ReportPropertyChanging("PharmacyName");
                _PharmacyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyName");
                OnPharmacyNameChanged();
            }
        }
        private global::System.String _PharmacyName;
        partial void OnPharmacyNameChanging(global::System.String value);
        partial void OnPharmacyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyStreet
        {
            get
            {
                return _PharmacyStreet;
            }
            set
            {
                OnPharmacyStreetChanging(value);
                ReportPropertyChanging("PharmacyStreet");
                _PharmacyStreet = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyStreet");
                OnPharmacyStreetChanged();
            }
        }
        private global::System.String _PharmacyStreet;
        partial void OnPharmacyStreetChanging(global::System.String value);
        partial void OnPharmacyStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyCity
        {
            get
            {
                return _PharmacyCity;
            }
            set
            {
                OnPharmacyCityChanging(value);
                ReportPropertyChanging("PharmacyCity");
                _PharmacyCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyCity");
                OnPharmacyCityChanged();
            }
        }
        private global::System.String _PharmacyCity;
        partial void OnPharmacyCityChanging(global::System.String value);
        partial void OnPharmacyCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyPostalCode
        {
            get
            {
                return _PharmacyPostalCode;
            }
            set
            {
                OnPharmacyPostalCodeChanging(value);
                ReportPropertyChanging("PharmacyPostalCode");
                _PharmacyPostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyPostalCode");
                OnPharmacyPostalCodeChanged();
            }
        }
        private global::System.String _PharmacyPostalCode;
        partial void OnPharmacyPostalCodeChanging(global::System.String value);
        partial void OnPharmacyPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyPhone
        {
            get
            {
                return _PharmacyPhone;
            }
            set
            {
                OnPharmacyPhoneChanging(value);
                ReportPropertyChanging("PharmacyPhone");
                _PharmacyPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyPhone");
                OnPharmacyPhoneChanged();
            }
        }
        private global::System.String _PharmacyPhone;
        partial void OnPharmacyPhoneChanging(global::System.String value);
        partial void OnPharmacyPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PharmacyFax
        {
            get
            {
                return _PharmacyFax;
            }
            set
            {
                OnPharmacyFaxChanging(value);
                ReportPropertyChanging("PharmacyFax");
                _PharmacyFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PharmacyFax");
                OnPharmacyFaxChanged();
            }
        }
        private global::System.String _PharmacyFax;
        partial void OnPharmacyFaxChanging(global::System.String value);
        partial void OnPharmacyFaxChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_SignUpRequests_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_SignUpRequests_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_SignUpRequests_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DoplatkyModel.FK_SignUpRequests_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DoplatkyModel.FK_SignUpRequests_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="loweredEmail">Initial value of the LoweredEmail property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String email, global::System.String password, global::System.DateTime created, global::System.Boolean isLockedOut, global::System.DateTime lastLogin, global::System.String loweredUserName, global::System.String loweredEmail, global::System.Boolean isApproved, global::System.String firstname, global::System.String surname)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Email = email;
            user.Password = password;
            user.Created = created;
            user.IsLockedOut = isLockedOut;
            user.LastLogin = lastLogin;
            user.LoweredUserName = loweredUserName;
            user.LoweredEmail = loweredEmail;
            user.IsApproved = isApproved;
            user.Firstname = firstname;
            user.Surname = surname;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivity
        {
            get
            {
                return _LastActivity;
            }
            set
            {
                OnLastActivityChanging(value);
                ReportPropertyChanging("LastActivity");
                _LastActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivity");
                OnLastActivityChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivity;
        partial void OnLastActivityChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PharmacyId
        {
            get
            {
                return _PharmacyId;
            }
            set
            {
                OnPharmacyIdChanging(value);
                ReportPropertyChanging("PharmacyId");
                _PharmacyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PharmacyId");
                OnPharmacyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PharmacyId;
        partial void OnPharmacyIdChanging(Nullable<global::System.Int32> value);
        partial void OnPharmacyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Users_Pharmacies", "Pharmacies")]
        public Pharmacy Pharmacy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Users_Pharmacies", "Pharmacies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Users_Pharmacies", "Pharmacies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Pharmacy> PharmacyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Pharmacy>("DoplatkyModel.FK_Users_Pharmacies", "Pharmacies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Pharmacy>("DoplatkyModel.FK_Users_Pharmacies", "Pharmacies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK__Posts__UserId__412EB0B6", "Posts")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Posts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("DoplatkyModel.FK__Posts__UserId__412EB0B6", "Posts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Prices_Users", "Prices")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("DoplatkyModel.FK_Prices_Users", "Prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("DoplatkyModel.FK_Prices_Users", "Prices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_SignUpRequests_Users", "SignUpRequests")]
        public EntityCollection<SignUpRequest> SignUpRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SignUpRequest>("DoplatkyModel.FK_SignUpRequests_Users", "SignUpRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SignUpRequest>("DoplatkyModel.FK_SignUpRequests_Users", "SignUpRequests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "UsersInRoles", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("DoplatkyModel.UsersInRoles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("DoplatkyModel.UsersInRoles", "Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DoplatkyModel", Name="Wrapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wrapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wrapping object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Wrapping CreateWrapping(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            Wrapping wrapping = new Wrapping();
            wrapping.Id = id;
            wrapping.Name = name;
            wrapping.Code = code;
            return wrapping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DoplatkyModel", "FK_Drugs_Wrappings", "Drugs")]
        public EntityCollection<Drug> Drugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Wrappings", "Drugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("DoplatkyModel.FK_Drugs_Wrappings", "Drugs", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
